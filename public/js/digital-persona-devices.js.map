{"version":3,"file":"index.umd.js","sources":["../es6/common/events.js","../es6/devices/events.js","../es6/devices/cards/cards.js","../es6/devices/cards/events.js","../es6/private/eventSource.js","../es6/devices/websdk/messages.js","../es6/devices/websdk/channel.js","../es6/devices/websdk/command.js","../es6/devices/cards/messages.js","../es6/devices/cards/reader.js","../es6/devices/fingerprints/device.js","../es6/devices/fingerprints/sample.js","../es6/devices/fingerprints/events.js","../es6/devices/fingerprints/messages.js","../es6/devices/fingerprints/reader.js","../es6/devices/iwa/messages.js","../es6/devices/iwa/device.js"],"sourcesContent":["/**\n * A base class for DigitalPersona events.\n */\nexport class Event {\n    constructor(type) {\n        this.type = type;\n    }\n}\n/**\n * An event signaling a problem with a device channel communication.\n */\nexport class CommunicationFailed extends Event {\n    constructor() {\n        super(\"CommunicationFailed\");\n    }\n}\n//# sourceMappingURL=events.js.map","import { Event } from '../common';\n/** A base class for device events.  */\nexport class DeviceEvent extends Event {\n    /** Constructs a new event.\n     * @param type - an event type\n     * @param deviceId - a device ID.\n     */\n    constructor(type, deviceId) {\n        super(type);\n        this.deviceId = deviceId;\n    }\n}\n/** An event signaling that a device was connected. */\nexport class DeviceConnected extends DeviceEvent {\n    /** Constructs a new event.\n     * @param deviceId - a device ID.\n     */\n    constructor(deviceId) {\n        super(\"DeviceConnected\", deviceId);\n    }\n}\n/** An event signaling that a device was disconnected. */\nexport class DeviceDisconnected extends DeviceEvent {\n    /** Constructs a new event.\n     * @param deviceId - a device ID.\n     */\n    constructor(deviceId) {\n        super(\"DeviceDisconnected\", deviceId);\n    }\n}\n//# sourceMappingURL=events.js.map","/** Enumerates supported card types. */\nexport var CardType;\n(function (CardType) {\n    /** A smartcard. */\n    CardType[CardType[\"Contact\"] = 1] = \"Contact\";\n    /** A contactless card. */\n    CardType[CardType[\"Contactless\"] = 2] = \"Contactless\";\n    /** A proximity card. */\n    CardType[CardType[\"Proximity\"] = 4] = \"Proximity\";\n})(CardType || (CardType = {}));\n/** Bitwise flags for attributes supported by a card. */\nexport var CardAttributes;\n(function (CardAttributes) {\n    /** The card supports PIN code. */\n    CardAttributes[CardAttributes[\"SupportsPIN\"] = 1] = \"SupportsPIN\";\n    /** The card supports UID. */\n    CardAttributes[CardAttributes[\"SupportsUID\"] = 2] = \"SupportsUID\";\n    /** The card supports PKI. */\n    CardAttributes[CardAttributes[\"IsPKI\"] = 65536] = \"IsPKI\";\n    /** The card supports PIV. */\n    CardAttributes[CardAttributes[\"IsPIV\"] = 131072] = \"IsPIV\";\n    /** The card is read-only. */\n    CardAttributes[CardAttributes[\"IsReadOnly\"] = 2147483648] = \"IsReadOnly\";\n})(CardAttributes || (CardAttributes = {}));\n//# sourceMappingURL=cards.js.map","import { DeviceEvent } from '../events';\n/**\n * An event signaling that a card was presented (inserted or touched) to a card reader.\n */\nexport class CardInserted extends DeviceEvent {\n    /** Contructs a new event object.\n     * @param reader - a name of a card reader where the card was presented.\n     * @param card - a name of a card presented.\n     */\n    constructor(reader, card) {\n        super(\"CardInserted\", reader);\n        this.cardId = card;\n    }\n}\n/** An event signaling that a card was removed from a card reader. */\nexport class CardRemoved extends DeviceEvent {\n    /** Contructs a new event object.\n     * @param reader - a name of a card reader where the card was presented.\n     * @param card - a name of a card presented.\n     */\n    constructor(reader, card) {\n        super(\"CardRemoved\", reader);\n        this.cardId = card;\n    }\n}\n//# sourceMappingURL=events.js.map","/**@internal\n *\n */\nexport class MultiCastEventSource {\n    constructor() {\n        this.handlers = {};\n    }\n    _on(event, handler) {\n        this.handlers[event] = this.handlers[event] || [];\n        this.handlers[event].push(handler);\n        return handler;\n    }\n    _off(event, handler) {\n        if (event) {\n            const hh = this.handlers[event];\n            if (hh) {\n                if (handler)\n                    this.handlers[event] = hh.filter(h => h !== handler);\n                else\n                    delete this.handlers[event];\n            }\n        }\n        else\n            this.handlers = {};\n        return this;\n    }\n    emit(event) {\n        if (!event)\n            return;\n        const eventName = event.type;\n        const unicast = this[\"on\" + eventName];\n        if (unicast)\n            this.invoke(unicast, event);\n        const multicast = this.handlers[eventName];\n        if (multicast)\n            multicast.forEach(h => this.invoke(h, event));\n    }\n    invoke(handler, event) {\n        try {\n            handler(event);\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n}\n//# sourceMappingURL=eventSource.js.map","/**@internal\n *\n */\nexport var MessageType;\n(function (MessageType) {\n    MessageType[MessageType[\"Response\"] = 0] = \"Response\";\n    MessageType[MessageType[\"Notification\"] = 1] = \"Notification\";\n})(MessageType || (MessageType = {}));\n//# sourceMappingURL=messages.js.map","import { Base64Url, Utf8 } from '@digitalpersona/core';\nimport { MessageType } from './messages';\nimport 'WebSdk';\n/**@internal\n *\n */\nexport class Channel {\n    constructor(channelName, options) {\n        this.pending = [];\n        this.webChannel = new WebSdk.WebChannelClient(channelName, options);\n        this.webChannel.onConnectionSucceed = this.onConnectionSucceed.bind(this);\n        this.webChannel.onConnectionFailed = this.onConnectionFailed.bind(this);\n        this.webChannel.onDataReceivedTxt = this.onDataReceivedTxt.bind(this);\n    }\n    send(request, timeout) {\n        const deferred = new Promise((resolve, reject) => {\n            request.resolve = resolve;\n            request.reject = reject;\n            if (timeout) {\n                request.timer = window.setTimeout(() => {\n                    if (request.timer)\n                        try {\n                            request.reject(new Error(\"Timeout\"));\n                        }\n                        catch (e) { }\n                }, timeout);\n            }\n        });\n        this.pending.push(request);\n        if (this.webChannel.isConnected())\n            this.processRequestQueue();\n        else\n            this.webChannel.connect();\n        return deferred;\n    }\n    onConnectionSucceed() {\n        this.processRequestQueue();\n    }\n    onConnectionFailed() {\n        this.pending.forEach(r => r.reject(new Error(\"Communication failure.\")));\n        this.pending = [];\n        if (this.onCommunicationError)\n            try {\n                this.onCommunicationError();\n            }\n            catch (e) { }\n    }\n    onDataReceivedTxt(data) {\n        const message = JSON.parse(Utf8.fromBase64Url(data));\n        if (message.Type === MessageType.Response) {\n            const response = JSON.parse(Utf8.fromBase64Url(message.Data || \"\"));\n            const request = this.findRequest(response);\n            if (request !== null) {\n                if (request.timer) {\n                    window.clearTimeout(request.timer);\n                    delete request.timer;\n                }\n                const hr = (response.Result >>> 0);\n                if (hr > 0x7FFFFFFF)\n                    request.reject(new Error(`0x${hr.toString(16)}`));\n                else\n                    request.resolve(response);\n            }\n            else\n                console.log(`Orphaned response: ${message.Type}`);\n        }\n        else if (message.Type === MessageType.Notification) {\n            const notification = JSON.parse(Utf8.fromBase64Url(message.Data || \"\"));\n            if (this.onNotification)\n                try {\n                    this.onNotification(notification);\n                }\n                catch (e) { }\n        }\n        else\n            console.log(`Unknown message type: ${message.Type}`);\n    }\n    processRequestQueue() {\n        this.pending.forEach((req, i, items) => {\n            if (!req.sent) {\n                this.webChannel.sendDataTxt(Base64Url.fromJSON(req.command));\n                items[i].sent = true;\n            }\n        });\n    }\n    findRequest(response) {\n        for (let i = 0; i < this.pending.length; i++) {\n            const request = this.pending[i];\n            if (request.sent && (request.command.Method === response.Method)) {\n                this.pending.splice(i, 1);\n                return request;\n            }\n        }\n        return null;\n    }\n}\n//# sourceMappingURL=channel.js.map","/**@internal\n *\n */\nexport class Command {\n    constructor(method, parameters) {\n        this.Method = method;\n        this.Parameters = parameters;\n    }\n}\n/**@internal\n *\n */\nexport class Request {\n    constructor(command) {\n        this.command = command;\n        this.sent = false;\n    }\n}\n//# sourceMappingURL=command.js.map","/**@internal\n *\n */\nexport var Method;\n(function (Method) {\n    Method[Method[\"EnumerateReaders\"] = 1] = \"EnumerateReaders\";\n    Method[Method[\"EnumerateCards\"] = 2] = \"EnumerateCards\";\n    Method[Method[\"GetCardInfo\"] = 3] = \"GetCardInfo\";\n    Method[Method[\"GetCardUID\"] = 4] = \"GetCardUID\";\n    Method[Method[\"GetDPCardAuthData\"] = 5] = \"GetDPCardAuthData\";\n    Method[Method[\"GetDPCardEnrollData\"] = 6] = \"GetDPCardEnrollData\";\n    Method[Method[\"Subscribe\"] = 100] = \"Subscribe\";\n    Method[Method[\"Unsubscribe\"] = 101] = \"Unsubscribe\";\n})(Method || (Method = {}));\n/**@internal\n *\n */\nexport var NotificationType;\n(function (NotificationType) {\n    NotificationType[NotificationType[\"ReaderConnected\"] = 1] = \"ReaderConnected\";\n    NotificationType[NotificationType[\"ReaderDisconnected\"] = 2] = \"ReaderDisconnected\";\n    NotificationType[NotificationType[\"CardInserted\"] = 3] = \"CardInserted\";\n    NotificationType[NotificationType[\"CardRemoved\"] = 4] = \"CardRemoved\";\n})(NotificationType || (NotificationType = {}));\n//# sourceMappingURL=messages.js.map","import { MultiCastEventSource } from '../../private';\nimport { Command, Request, Channel } from '../websdk';\nimport { CommunicationFailed } from '../../common';\nimport { DeviceConnected, DeviceDisconnected } from '../events';\nimport { CardInserted, CardRemoved } from './events';\nimport { Method, NotificationType } from \"./messages\";\nimport { Utf8, Base64Url, Base64, Utf16 } from '@digitalpersona/core';\n/**\n * A card reader API class.\n * An instance of this class allows to subscribe to card reader events and read card data.\n * The card reader API uses DigitalPersona WebSDK to communicate with card reader drivers and hardware.\n */\nexport class CardsReader extends MultiCastEventSource {\n    /**\n     * Constructs a new card reader API object.\n     * @param options - options for the `WebSdk` channel.\n     */\n    constructor(options) {\n        super();\n        this.channel = new Channel(\"smartcards\", options);\n        this.channel.onCommunicationError = this.onConnectionFailed.bind(this);\n        this.channel.onNotification = this.processNotification.bind(this);\n    }\n    /**\n     * Adds an event handler for the event.\n     * This is a multicast subscription, i.e. many handlers can be registered at once.\n     *\n     * @param event - a name of the event to subscribe, e.g. \"CardInserted\"\n     * @param handler - an event handler.\n     * @returns an event handler reference.\n     * Store the reference and pass it to the {@link CardsReader.off} to unsubscribe from the event.\n     *\n     * @example\n     * ```\n     * class CardComponent\n     * {\n     *     private reader: CardsReader;\n     *\n     *     private onCardInserted = (event: CardInserted) => { ... }\n     *     private onCardRemoved = (event: CardRemoved) => { ... }\n     *     ...\n     *\n     *     public async $onInit() {\n     *         this.reader = new CardsReader();\n     *         this.reader.on(\"CardInserted\", this.onCardInserted);\n     *         this.reader.on(\"CardRemoved\", this.onCardRemoved);\n     *         ...\n     *         await this.cardReader.subscribe()\n     *     }\n     *     public async $onDestroy() {\n     *         await this.cardReader.unsubscribe();\n     *         this.reader.off(\"CardInserted\", this.onCardInserted);\n     *         this.reader.off(\"CardRemoved\", this.onCardRemoved);\n     *         ...\n     *         // alternatively, call this.reader.off() to unsubscribe from all events at once.\n     *         delete this.reader;\n     *     }\n     * }\n     * ```\n     */\n    on(event, handler) { return this._on(event, handler); }\n    /** Deletes an event handler for the event.\n     * @param event - a name of the event to subscribe.\n     * @param handler - an event handler added with the {@link CardsReader.on} method.\n     * @example See example in {@link CardsReader.on}\n     */\n    off(event, handler) { return this._off(event, handler); }\n    /** Lists all connected card readers.\n     * @returns a promise to return a list of card reader names.\n     */\n    enumerateReaders() {\n        return this.channel.send(new Request(new Command(Method.EnumerateReaders)))\n            .then(response => {\n            const list = JSON.parse(Utf8.fromBase64Url(response.Data || \"{}\"));\n            return JSON.parse(list.Readers || \"[]\");\n        });\n    }\n    /** Lists all inserted cards.\n     * @returns a promise to return a list of card information for connected cards.\n     */\n    enumerateCards() {\n        return this.channel.send(new Request(new Command(Method.EnumerateCards)))\n            .then(response => {\n            const list = JSON.parse(Utf8.fromBase64Url(response.Data || \"{}\"));\n            const cards = JSON.parse(list.Cards || \"[]\");\n            return cards.map(s => JSON.parse(Utf16.fromBase64Url(s)));\n        });\n    }\n    /** Reads card data from a specific card.\n     * @param reader - a name of a card reader where the card was presented.\n     * @returns a promise to return a card information.\n     * The promise can be fulfilled but return `null` if the card has no information.\n     * The promise will be rejected if a card is not found or in case of a reading error.\n     */\n    getCardInfo(reader) {\n        return this.channel.send(new Request(new Command(Method.GetCardInfo, Base64Url.fromJSON({ Reader: reader }))))\n            .then(response => {\n            const cardInfo = JSON.parse(Utf8.fromBase64Url(response.Data || \"null\"));\n            return cardInfo;\n        });\n    }\n    /** Reads a card unique identifier.\n     * @param reader - a name of a card reader where the card was presented.\n     * @returns a promise to return a card identifier.\n     */\n    getCardUid(reader) {\n        return this.channel.send(new Request(new Command(Method.GetCardUID, Base64Url.fromJSON({ Reader: reader }))))\n            .then(response => {\n            const data = Base64.fromBase64Url(response.Data || \"\");\n            return data;\n        });\n    }\n    /** Reads card authentication data.\n     * @param reader - a name of a card reader where the card was presented.\n     * @param pin - an PIN code (for cards requiring a PIN).\n     * @returns a promise to return card authentication data.\n     * The card data is an opaque encoded string which should be sent to the server as is.\n     */\n    getCardAuthData(reader, pin) {\n        return this.channel.send(new Request(new Command(Method.GetDPCardAuthData, Base64Url.fromJSON({ Reader: reader, PIN: pin || \"\" }))))\n            .then(response => {\n            const data = JSON.parse(Utf8.fromBase64Url(response.Data || \"\"));\n            return data;\n        });\n    }\n    /** Reads card enrollment data.\n     * @param reader - a name of a card reader where the card was presented.\n     * @param pin - an PIN code (for cards requiring a PIN).\n     * @returns a promise to return a card enrollment data.\n     * The card data is an opaque encoded string which should be sent to the server as is.\n     */\n    getCardEnrollData(reader, pin) {\n        return this.channel.send(new Request(new Command(Method.GetDPCardEnrollData, Base64Url.fromJSON({ Reader: reader, PIN: pin || \"\" }))))\n            .then(response => {\n            const data = JSON.parse(Utf8.fromBase64Url(response.Data || \"\"));\n            return data;\n        });\n    }\n    /** Starts listening for card reader events.\n     * @param reader - an optional name of a card reader to listen.\n     * If no name is provided, the API will start listening all card readers.\n     */\n    subscribe(reader) {\n        return this.channel.send(new Request(new Command(Method.Subscribe, reader ? Base64Url.fromJSON({ Reader: reader }) : \"\")))\n            .then();\n    }\n    /** Stop listening for card reader events.\n     * @param reader - an optional name of a card reader to stop listening.\n     * If no name is provided, the API will stop listening all card readers.\n     */\n    unsubscribe(reader) {\n        return this.channel.send(new Request(new Command(Method.Unsubscribe, reader ? Base64Url.fromJSON({ Reader: reader }) : \"\")))\n            .then();\n    }\n    /** Converts WebSdk connectivity error to a card API event. */\n    onConnectionFailed() {\n        this.emit(new CommunicationFailed());\n    }\n    /** Converts WebSdk notification to card API events. */\n    processNotification(notification) {\n        switch (notification.Event) {\n            case NotificationType.ReaderConnected:\n                return this.emit(new DeviceConnected(notification.Reader));\n            case NotificationType.ReaderDisconnected:\n                return this.emit(new DeviceDisconnected(notification.Reader));\n            case NotificationType.CardInserted:\n                return this.emit(new CardInserted(notification.Reader, notification.Card));\n            case NotificationType.CardRemoved:\n                return this.emit(new CardRemoved(notification.Reader, notification.Card));\n            default:\n                console.log(`Unknown notification: ${notification.Event}`);\n        }\n    }\n}\n//# sourceMappingURL=reader.js.map","/**\n * Fingerprint device types.\n */\nexport var DeviceUidType;\n(function (DeviceUidType) {\n    /** The fingerprint device is embedded and cannot be removed. */\n    DeviceUidType[DeviceUidType[\"Persistent\"] = 0] = \"Persistent\";\n    /** The fingerprint device can be removed. */\n    DeviceUidType[DeviceUidType[\"Volatile\"] = 1] = \"Volatile\";\n})(DeviceUidType || (DeviceUidType = {}));\n/**\n * Fingerprint device modalities (how users should use they fingers to make a scan).\n */\nexport var DeviceModality;\n(function (DeviceModality) {\n    /** The fingerprint modality is not known. */\n    DeviceModality[DeviceModality[\"Unknown\"] = 0] = \"Unknown\";\n    /** Users must swipe a single finger.  */\n    DeviceModality[DeviceModality[\"Swipe\"] = 1] = \"Swipe\";\n    /** Users must place a single finger over a scaning area. */\n    DeviceModality[DeviceModality[\"Area\"] = 2] = \"Area\";\n    /** Users must place multiple fingers over a scaning area. */\n    DeviceModality[DeviceModality[\"AreaMultifinger\"] = 3] = \"AreaMultifinger\";\n})(DeviceModality || (DeviceModality = {}));\n/** A fingerprint reader technology (a method of scanning)  */\nexport var DeviceTechnology;\n(function (DeviceTechnology) {\n    /** The method of scanning is unknown. */\n    DeviceTechnology[DeviceTechnology[\"Unknown\"] = 0] = \"Unknown\";\n    /** The reader uses an optical image of a finger skin. */\n    DeviceTechnology[DeviceTechnology[\"Optical\"] = 1] = \"Optical\";\n    /** The reader uses changes of electrical capacitance of a finger skin. */\n    DeviceTechnology[DeviceTechnology[\"Capacitive\"] = 2] = \"Capacitive\";\n    /** The reader uses a thermal image of a finger.  */\n    DeviceTechnology[DeviceTechnology[\"Thermal\"] = 3] = \"Thermal\";\n    /** The reader uses changes of a pressure under the finger. */\n    DeviceTechnology[DeviceTechnology[\"Pressure\"] = 4] = \"Pressure\";\n})(DeviceTechnology || (DeviceTechnology = {}));\n//# sourceMappingURL=device.js.map","/**\n * A fingerprint sample format.\n */\nexport var SampleFormat;\n(function (SampleFormat) {\n    /** A raw fingerprint image (bitmap). */\n    SampleFormat[SampleFormat[\"Raw\"] = 1] = \"Raw\";\n    /** A fingerprint feature set in a DigitalPersona proprietary format. To use with DigitalPersona fingerprint matching engine only. */\n    SampleFormat[SampleFormat[\"Intermediate\"] = 2] = \"Intermediate\";\n    /** A fingerprint image compressed using Wavelet Scalar Quantization (WSQ) algotithm. */\n    SampleFormat[SampleFormat[\"Compressed\"] = 3] = \"Compressed\";\n    /** A fingerprint image in a Portable Network Graphics (PNG) format. */\n    SampleFormat[SampleFormat[\"PngImage\"] = 5] = \"PngImage\";\n})(SampleFormat || (SampleFormat = {}));\n/**\n * A figerprint image quality.\n */\nexport var QualityCode;\n(function (QualityCode) {\n    QualityCode[QualityCode[\"Good\"] = 0] = \"Good\";\n    QualityCode[QualityCode[\"NoImage\"] = 1] = \"NoImage\";\n    QualityCode[QualityCode[\"TooLight\"] = 2] = \"TooLight\";\n    QualityCode[QualityCode[\"TooDark\"] = 3] = \"TooDark\";\n    QualityCode[QualityCode[\"TooNoisy\"] = 4] = \"TooNoisy\";\n    QualityCode[QualityCode[\"LowContrast\"] = 5] = \"LowContrast\";\n    QualityCode[QualityCode[\"NotEnoughFeatures\"] = 6] = \"NotEnoughFeatures\";\n    QualityCode[QualityCode[\"NotCentered\"] = 7] = \"NotCentered\";\n    QualityCode[QualityCode[\"NotAFinger\"] = 8] = \"NotAFinger\";\n    QualityCode[QualityCode[\"TooHigh\"] = 9] = \"TooHigh\";\n    QualityCode[QualityCode[\"TooLow\"] = 10] = \"TooLow\";\n    QualityCode[QualityCode[\"TooLeft\"] = 11] = \"TooLeft\";\n    QualityCode[QualityCode[\"TooRight\"] = 12] = \"TooRight\";\n    QualityCode[QualityCode[\"TooStrange\"] = 13] = \"TooStrange\";\n    QualityCode[QualityCode[\"TooFast\"] = 14] = \"TooFast\";\n    QualityCode[QualityCode[\"TooSkewed\"] = 15] = \"TooSkewed\";\n    QualityCode[QualityCode[\"TooShort\"] = 16] = \"TooShort\";\n    QualityCode[QualityCode[\"TooSlow\"] = 17] = \"TooSlow\";\n    QualityCode[QualityCode[\"ReverseMotion\"] = 18] = \"ReverseMotion\";\n    QualityCode[QualityCode[\"PressureTooHard\"] = 19] = \"PressureTooHard\";\n    QualityCode[QualityCode[\"PressureTooLight\"] = 20] = \"PressureTooLight\";\n    QualityCode[QualityCode[\"WetFinger\"] = 21] = \"WetFinger\";\n    QualityCode[QualityCode[\"FakeFinger\"] = 22] = \"FakeFinger\";\n    QualityCode[QualityCode[\"TooSmall\"] = 23] = \"TooSmall\";\n    QualityCode[QualityCode[\"RotatedTooMuch\"] = 24] = \"RotatedTooMuch\";\n})(QualityCode || (QualityCode = {}));\n//# sourceMappingURL=sample.js.map","import { DeviceEvent } from '../events';\n/** An event signaling that a new fingerprint sample (or samples) was acquired during a scan. */\nexport class SamplesAcquired extends DeviceEvent {\n    /** Constructs a new event object.\n     * @param deviceUid - a fingerprint reader ID.\n     * @param sampleFormat - a fingerprint sample format.\n     * @param sampleData - raw sample data received with WebSdk notifiation.\n     */\n    constructor(deviceUid, sampleFormat, sampleData) {\n        super(\"SamplesAcquired\", deviceUid);\n        this.sampleFormat = sampleFormat;\n        this.samples = JSON.parse(sampleData);\n    }\n}\n/** An event reporting a quality of a fingerprint scan. */\nexport class QualityReported extends DeviceEvent {\n    /** Constructs a new event object.\n     * @param deviceUid - a fingerprint reader ID.\n     * @param quality - a fingerprint scan quality.\n     */\n    constructor(deviceUid, quality) {\n        super(\"QualityReported\", deviceUid);\n        this.quality = quality;\n    }\n}\n/** An event reporting a fingerprint reader error.  */\nexport class ErrorOccurred extends DeviceEvent {\n    /** Constructs a new event object.\n     * @param deviceUid - a fingeprint reader ID.\n     * @param error - an error code.\n     */\n    constructor(deviceUid, error) {\n        super(\"ErrorOccurred\", deviceUid);\n        this.error = error;\n    }\n}\n/** An event signaling that a fingerprint reader is ready and waiting to scan a finger. */\nexport class AcquisitionStarted extends DeviceEvent {\n    /** Constructs a new event object.\n     * @param deviceUid - a fingeprint reader ID.\n     */\n    constructor(deviceUid) {\n        super(\"AcquisitionStarted\", deviceUid);\n    }\n}\n/** An event signaling that a fingerprint reader has stopped waiting for a finger scan. */\nexport class AcquisitionStopped extends DeviceEvent {\n    /** Constructs a new event object.\n     * @param deviceUid - a fingeprint reader ID.\n     */\n    constructor(deviceUid) {\n        super(\"AcquisitionStopped\", deviceUid);\n    }\n}\n//# sourceMappingURL=events.js.map","/**@internal\n *\n */\nexport var Method;\n(function (Method) {\n    Method[Method[\"EnumerateDevices\"] = 1] = \"EnumerateDevices\";\n    Method[Method[\"GetDeviceInfo\"] = 2] = \"GetDeviceInfo\";\n    Method[Method[\"StartAcquisition\"] = 3] = \"StartAcquisition\";\n    Method[Method[\"StopAcquisition\"] = 4] = \"StopAcquisition\";\n})(Method || (Method = {}));\n/**@internal\n *\n */\nexport var NotificationType;\n(function (NotificationType) {\n    NotificationType[NotificationType[\"Completed\"] = 0] = \"Completed\";\n    NotificationType[NotificationType[\"Error\"] = 1] = \"Error\";\n    NotificationType[NotificationType[\"Disconnected\"] = 2] = \"Disconnected\";\n    NotificationType[NotificationType[\"Connected\"] = 3] = \"Connected\";\n    NotificationType[NotificationType[\"Quality\"] = 4] = \"Quality\";\n    NotificationType[NotificationType[\"Stopped\"] = 10] = \"Stopped\";\n    NotificationType[NotificationType[\"Started\"] = 11] = \"Started\";\n})(NotificationType || (NotificationType = {}));\n//# sourceMappingURL=messages.js.map","import { Base64Url, Utf8 } from '@digitalpersona/core';\nimport { MultiCastEventSource } from '../../private';\nimport { Command, Request, Channel } from '../websdk';\nimport { CommunicationFailed } from '../../common';\nimport { DeviceConnected, DeviceDisconnected } from '../events';\nimport { ErrorOccurred, SamplesAcquired, QualityReported, AcquisitionStarted, AcquisitionStopped, } from './events';\nimport { Method, NotificationType } from './messages';\n/**\n * A fingerprint reader API.\n * An instance of this class allows to subscribe to finerprint reader events and read fingerprint data.\n * The fingerprint reader API uses DigitalPersona WebSDK to communicate with fingerprint reader drivers and hardware.\n */\nexport class FingerprintReader extends MultiCastEventSource {\n    /**\n     * Constructs a new fingerprint reader API object.\n     * @param options - options for the `WebSdk` channel.\n     */\n    constructor(options) {\n        super();\n        this.options = options;\n        this.channel = new Channel(\"fingerprints\", this.options);\n        this.channel.onCommunicationError = this.onConnectionFailed.bind(this);\n        this.channel.onNotification = this.processNotification.bind(this);\n    }\n    /**\n     * Adds an event handler for the event.\n     * This is a multicast subscription, i.e. many handlers can be registered at once.\n     *\n     * @param event - a name of the event to subscribe, e.g. \"SampleAcquired\"\n     * @param handler - an event handler.\n     * @returns an event handler reference.\n     * Store the reference and pass it to the {@link FingerprintReader.off} to unsubscribe from the event.\n     *\n     * @example\n     * ```\n     * class FingerprintComponent\n     * {\n     *     private reader: FingerprintReader;\n     *\n     *     private onDeviceConnected = (event: DeviceConnected) => { ... };\n     *     private onDeviceDisconnected = (event: DeviceDisconnected) => { ... };\n     *     private onSamplesAcquired = (event: SampleAquired) => { ... };\n     *     ...\n     *\n     *     public async $onInit() {\n     *         this.reader = new FingerprintReader();\n     *         this.reader.on(\"DeviceConnected\", onDeviceConnected);\n     *         this.reader.on(\"DeviceDisconnected\", onDeviceDisconnected);\n     *         this.reader.on(\"SamplesAcquired\", onSamplesAcquired);\n     *         ...\n     *         await this.fingerprintReader.startAcquisition(SampleFormat.Intermediate);\n     *     }\n     *     public async $onDestroy() {\n     *         await this.fingerprintReader.stopAcquisition();\n     *         this.reader.off(\"DeviceConnected\", onDeviceConnected);\n     *         this.reader.off(\"DeviceDisconnected\", onDeviceDisconnected);\n     *         this.reader.off(\"SamplesAcquired\", onSamplesAcquired);\n     *         ...\n     *         // alternatively, call this.reader.off() to unsubscribe from all events at once.\n     *         delete this.reader;\n     *     }\n     * }\n     * ```\n     */\n    on(event, handler) { return this._on(event, handler); }\n    /** Deletes an event handler for the event.\n     * @param event - a name of the event to subscribe.\n     * @param handler - an event handler added with the {@link FingerprintReader.on} method.\n     */\n    off(event, handler) { return this._off(event, handler); }\n    /** Lists all connected fingerprint readers.\n     * @returns a promise to return a list of fingerprint reader names.\n     */\n    enumerateDevices() {\n        return this.channel.send(new Request(new Command(Method.EnumerateDevices)))\n            .then(response => {\n            if (!response)\n                return [];\n            const deviceList = JSON.parse(Utf8.fromBase64Url(response.Data || \"{}\"));\n            return JSON.parse(deviceList.DeviceIDs || \"[]\");\n        });\n    }\n    /** Reads a fingerprint reader device information.\n     * @param deviceUid - a fingerprint reader ID.\n     * @returns a promise to return a device information.\n     * The promise can be fulfilled but return `null` if the reader provides no information.\n     * The promise will be rejected if a reader is not found or in case of a reading error.\n     */\n    getDeviceInfo(deviceUid) {\n        return this.channel.send(new Request(new Command(Method.GetDeviceInfo, Base64Url.fromJSON({ DeviceID: deviceUid }))))\n            .then(response => {\n            const deviceInfo = JSON.parse(Utf8.fromBase64Url(response.Data || \"null\"));\n            return deviceInfo;\n        });\n    }\n    /** Activate a fingerprint acquisition mode.\n     * This call will produce a {@link AcquisitionStarted} event if activation was successful.\n     * After that the reader will wait for a finger placed on the reader.\n     * When a finger is placed, a {@link QualityReported} event will report a scan quality,\n     * and a {@link SamplesAcquired} event will return a scanned sample in case of a successful scan.\n     */\n    startAcquisition(sampleFormat, deviceUid) {\n        return this.channel.send(new Request(new Command(Method.StartAcquisition, Base64Url.fromJSON({\n            DeviceID: deviceUid ? deviceUid : \"00000000-0000-0000-0000-000000000000\",\n            SampleType: sampleFormat,\n        }))))\n            .then();\n    }\n    /** Deactivates a fingerprint acquisition mode.\n     * This call will produce a {@link AcquisitionStopped} event if deactivation was successful.\n     * After that the reader will stop waiting for a finger.\n     */\n    stopAcquisition(deviceUid) {\n        return this.channel.send(new Request(new Command(Method.StopAcquisition, Base64Url.fromJSON({\n            DeviceID: deviceUid ? deviceUid : \"00000000-0000-0000-0000-000000000000\",\n        }))))\n            .then();\n    }\n    /** Converts WebSdk connectivity error to a fingerprint API event. */\n    onConnectionFailed() {\n        this.emit(new CommunicationFailed());\n    }\n    /** Converts WebSdk notification to fingerprint API events. */\n    processNotification(notification) {\n        switch (notification.Event) {\n            case NotificationType.Completed:\n                const completed = JSON.parse(Utf8.fromBase64Url(notification.Data || \"\"));\n                return this.emit(new SamplesAcquired(notification.Device, completed.SampleFormat, completed.Samples));\n            case NotificationType.Error:\n                const error = JSON.parse(Utf8.fromBase64Url(notification.Data || \"\"));\n                return this.emit(new ErrorOccurred(notification.Device, error.uError));\n            case NotificationType.Disconnected:\n                return this.emit(new DeviceDisconnected(notification.Device));\n            case NotificationType.Connected:\n                return this.emit(new DeviceConnected(notification.Device));\n            case NotificationType.Quality:\n                const quality = JSON.parse(Utf8.fromBase64Url(notification.Data || \"\"));\n                return this.emit(new QualityReported(notification.Device, quality.Quality));\n            case NotificationType.Stopped:\n                return this.emit(new AcquisitionStopped(notification.Device));\n            case NotificationType.Started:\n                return this.emit(new AcquisitionStarted(notification.Device));\n            default:\n                console.log(`Unknown notification: ${notification.Event}`);\n        }\n    }\n}\n//# sourceMappingURL=reader.js.map","/**@internal\n *\n */\nexport var Method;\n(function (Method) {\n    Method[Method[\"Init\"] = 1] = \"Init\";\n    Method[Method[\"Continue\"] = 2] = \"Continue\";\n    Method[Method[\"Term\"] = 3] = \"Term\";\n    Method[Method[\"Authenticate\"] = 4] = \"Authenticate\";\n})(Method || (Method = {}));\n/**@internal\n *\n */\nexport var MessageType;\n(function (MessageType) {\n    MessageType[MessageType[\"Response\"] = 0] = \"Response\";\n    MessageType[MessageType[\"Notification\"] = 1] = \"Notification\";\n})(MessageType || (MessageType = {}));\n//# sourceMappingURL=messages.js.map","import { MultiCastEventSource } from '../../private';\nimport { Command, Request, Channel } from '../websdk';\nimport { CommunicationFailed } from '../../common';\nimport { Method } from './messages';\n/**\n * Integrated Windows Authentication API.\n * An instance of this class allows internet browsers to authenticate in DigitalPersona servers\n * using Integrated Windows Authentication.\n * The IWA API uses DigitalPersona WebSDK to communicate with Windwows operating system and extract\n * Windows account data for authentication.\n */\nexport class WindowsAuthClient extends MultiCastEventSource {\n    /**\n     * Constructs a new IWA API object.\n     * @param options - options for the `WebSdk` channel.\n     */\n    constructor(options) {\n        super();\n        this.channel = new Channel(\"wia\", options);\n        this.channel.onCommunicationError = this.onConnectionFailed.bind(this);\n    }\n    /**\n     * Adds an event handler for the event.\n     * This is a multicast subscription, i.e. many handlers can be registered at once.\n     *\n     * @param event - a name of the event to subscribe, e.g. \"CommunicationFailed\"\n     * @param handler - an event handler.\n     * @returns an event handler reference.\n     * Store the reference and pass it to the {@link WindowsAuthClient.off} to unsubscribe from the event.\n     *\n     * @example\n     * ```\n     * class IntegratedWindowsAuthComponent\n     * {\n     *     private client: WindowsAuthClient;\n     *\n     *     private onCommunicationFailed = (event: CommunicationFailed) => { ... }\n     *\n     *     public $onInit() {\n     *         this.client = new WindowsAuthClient();\n     *         this.client.on(\"CommunicationFailed\", this.onCommunicationFailed);\n     *     }\n     *     public $onDestroy() {\n     *         this.client.off(\"CommunicationFailed\", this.onCommunicationFailed);\n     *         // alternatively, call this.reader.off() to unsubscribe from all events at once.\n     *         delete this.client;\n     *     }\n     * }\n     * ```\n     */\n    on(event, handler) { return this._on(event, handler); }\n    /** Deletes an event handler for the event.\n     * @param event - a name of the event to subscribe.\n     * @param handler - an event handler added with the {@link WindowsAuthClient.on} method.\n     */\n    off(event, handler) { return this._off(event, handler); }\n    /** Used internally. Do not call this method. */\n    init() {\n        return this.channel.send(new Request(new Command(Method.Init)), 3000)\n            .then(response => {\n            const data = JSON.parse(response.Data || \"{}\");\n            return { handle: data.Handle, data: data.Data };\n        });\n    }\n    /** Used internally. Do not call this method. */\n    continue(handle, data) {\n        return this.channel.send(new Request(new Command(Method.Continue, JSON.stringify({ Handle: handle, Data: data }))))\n            .then(response => {\n            const d = JSON.parse(response.Data || \"{}\");\n            return d.Data;\n        });\n    }\n    /** Used internally. Do not call this method. */\n    term(handle) {\n        return this.channel.send(new Request(new Command(Method.Term, JSON.stringify({ Handle: handle }))))\n            .then();\n    }\n    /** Converts WebSdk connectivity error to an IWA API event. */\n    onConnectionFailed() {\n        this.emit(new CommunicationFailed());\n    }\n}\n//# sourceMappingURL=device.js.map"],"names":["CardType","CardAttributes","Utf8","Base64Url","Utf16","Base64","DeviceUidType","DeviceModality","DeviceTechnology","SampleFormat","QualityCode","Method","NotificationType","MessageType"],"mappings":"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"}